openapi: 3.0.0

info:
  title: Real Estate API
  version: 1.0.0

tags:
  - name: Properties
    description: Everything about the properties
  - name: Users
    description: Everything about users

paths:
  /api/token:
    get:
      security:
        - basicAuth: []
      tags:
        - Users
      operationId: methods.methods.get_auth_token
      summary: Returns an access token
      responses:
        '200':
          description: A JSON with the token access
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
  /api/search:
    post:
      operationId: methods.methods.recherche
      tags:
        - Properties
      summary: Returns all properties in the provided city
      requestBody:
          required: true
          description: A JSON with the city the user is searching for
          content:
            application/json:
              schema:
                type: object
                properties:
                  city:
                    type: string
      responses:
        '200':
          description: List of all found properties
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'
        '404':
          description: Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/add_user:
    post:
      tags:
        - Users
      operationId: methods.methods.add_user
      summary: Adds a new user
      requestBody:
        required: true
        description: A JSON with all the required information
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
                birthdate:
                  type: string
                name:
                  type: string
                firstname:
                  type: string
      responses:
        '200':
          description: Summary of the new user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/all_users:
    get:
      tags:
        - Users
      operationId: methods.methods.get_users
      summary: Returns all users
      responses:
        '200':
          description: List of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/get_user:
    get:
      tags:
        - Users
      security:
        - basicAuth: []
      operationId: methods.methods.get_user
      summary: Returns the current user
      responses:
        '200':
          description: Description of the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/edit_user:
    put:
      tags:
        - Users
      security:
        - basicAuth: []
      summary: Edits the current user
      operationId: methods.methods.edit_user
      requestBody:
        required: true
        description: A JSON with all the required information
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                birthdate:
                  type: string
                name:
                  type: string
                firstname:
                  type: string
      responses:
        '200':
          description: Description of the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/add_property:
    post:
      tags:
        - Properties
      security:
        - basicAuth: []
      summary: Adds a new property for the current user
      operationId: methods.methods.add_property
      requestBody:
        required: true
        description: A JSON with all the required information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
      responses:
        '200':
          description: Description of the new property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        '404':
          description: Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/edit_property:
    put:
      tags:
        - Properties
      security:
        - basicAuth: []
      summary: Edits the property whose ID matches the provided ID
      operationId: methods.methods.edit_property
      requestBody:
        required: true
        description: A JSON with all the required information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
      responses:
        '200':
          description: Description of the modified property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        '404':
          description: Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/get_properties:
    get:
      tags:
        - Properties
      security:
        - basicAuth: []  
      operationId: methods.methods.get_properties
      summary: Returns all properties of the current user
      responses:
        '200':
          description: List of all properties of the current user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'  
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Property:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
        description:
          type: string
        city:
          type: string
        address:
          type: string
        owner:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            firstname:
              type: string
            birthdate:
              type: string
        rooms:
          type: string
          items:
            $ref: '#/components/schemas/Room'
    Room:
      type: object
      properties:
        id:
          type: integer
        area:
          type: number
        description:
          type: string
    User:
      type: object
      properties:
        birthdate:
          type: string
        firstname:
          type: string
        id:
          type: integer
        name:
          type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
    Error:
      type: object
      properties:
        error:
          type: string

